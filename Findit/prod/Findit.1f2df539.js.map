{"version":3,"sources":["index.js"],"names":["form","document","querySelector","searchinput","limit","showMessage","message","className","div","createElement","appendChild","createTextNode","insertBefore","search","setTimeout","remove","truncateString","str","num","length","slice","addEventListener","e","preventDefault","sortby","value","input","limitval","fetch","then","res","json","data","children","map","catch","err","console","log","results","output","forEach","item","image","preview","images","source","url","title","selftext","subreddit","score","getElementById","innerHTML"],"mappings":";AAAA,IAAMA,EAAOC,SAASC,cAAc,gBAC9BC,EAAcH,EAAKE,cAAc,iBACjCE,EAAQJ,EAAKE,cAAc,UA6CjC,SAASG,EAAYC,EAAQC,GACnBC,IAAAA,EAAMP,SAASQ,cAAc,OACnCD,EAAID,UAAqBA,SAAAA,OAAAA,GACzBC,EAAIE,YAAYT,SAASU,eAAeL,IACtBL,SAASC,cAAc,WACpBD,SAASC,cAAc,qBAC/BU,aAAaJ,EAAIK,QAC9BC,WAAW,WAAMb,OAAAA,SAASC,cAAc,UAAUa,UAAS,KAG/D,SAASC,EAAeC,EAAKC,GAGrBD,OAAAA,EAAIE,QAAUD,EACTD,EAGFA,EAAIG,MAAM,EAAGF,GAAO,MA5D/BlB,EAAKqB,iBAAiB,SAAU,SAAAC,GAC5BA,EAAEC,iBACIC,IAAAA,EAASvB,SAASC,cAAc,gCAAgCuB,MAChEC,EAAQvB,EAAYsB,MACpBE,EAAWvB,EAAMqB,MAEE,KAAtBtB,EAAYsB,OACXpB,EAAY,iCAAiC,gBAIxCQ,SAAOa,EAAMF,EAAOG,GAClBC,OAAAA,MAA6CF,uCAAAA,OAAAA,EAAcF,UAAAA,OAAAA,EAAgBG,WAAAA,OAAAA,IAC7EE,KAAK,SAAAC,GAAOA,OAAAA,EAAIC,SAChBF,KAAK,SAAAG,GAAQA,OAAAA,EAAKA,KAAKC,SAASC,IAAI,SAAAF,GAAQA,OAAAA,EAAKA,SACjDG,MAAM,SAAAC,GAAOC,OAAAA,QAAQC,IAAIF,KAGlCvB,CAAOa,EAAMF,EAAOG,GACfE,KAAK,SAAAU,GACEC,IAAAA,EAAS,6BACbD,EAAQE,QAAQ,SAAAC,GACRC,IAAAA,EAAQD,EAAKE,QAAUF,EAAKE,QAAQC,OAAO,GAAGC,OAAOC,IAAM,kFAE/DP,GACYG,iDAAAA,OAAAA,EAEeD,yHAAAA,OAAAA,EAAKM,MACPhC,kDAAAA,OAAAA,EAAe0B,EAAKO,SAAS,KACzCP,qCAAAA,OAAAA,EAAKK,IAEsBL,2IAAAA,OAAAA,EAAKQ,UACVR,8DAAAA,OAAAA,EAAKS,MARxC,2DAYJX,GAAU,SACVvC,SAASmD,eAAe,WAAWC,UAAYb,IAGnDrC,EAAYsB,MAAQ","file":"Findit.1f2df539.js","sourceRoot":"..","sourcesContent":["const form = document.querySelector('#search-form');\r\nconst searchinput = form.querySelector('#search-input');\r\nconst limit = form.querySelector('#limit');\r\n\r\nform.addEventListener('submit', e => {\r\n    e.preventDefault();\r\n    const sortby = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n    const input = searchinput.value;\r\n    const limitval = limit.value;\r\n\r\n    if(searchinput.value === ''){\r\n        showMessage('Please give us a search term !','alert-danger');\r\n    }\r\n    \r\n    //Search Reditt here !\r\n    function search(input,sortby,limitval){\r\n        return fetch(`http://www.reddit.com/search.json?q=${input}&sort=${sortby}&limit=${limitval}`)\r\n            .then(res => res.json())\r\n            .then(data => data.data.children.map(data => data.data))\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    search(input,sortby,limitval)\r\n        .then(results => {\r\n            let output = '<div class=\"card-columns\">';\r\n            results.forEach(item => {\r\n                let image = item.preview ? item.preview.images[0].source.url : 'https://www.affiliatemarketertraining.com/wp-content/uploads/2015/01/Reddit.jpg';\r\n        \r\n                output += `<div class=\"card\">\r\n                <img src=\"${image}\" class=\"card-img-top\" alt=\"...\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">${item.title}</h5>\r\n                  <p class=\"card-text\">${truncateString(item.selftext,100)}</p>\r\n                  <a href=\"${item.url}\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\r\n                  <hr>\r\n                  <span class=\"badge badge-secondary\">${item.subreddit}</span>\r\n                  <span class=\"badge badge-dark\">${item.score}</span>\r\n                </div>\r\n              </div>`;\r\n            })\r\n            output += '</div>';\r\n            document.getElementById('results').innerHTML = output;\r\n        });\r\n\r\n        searchinput.value = '';\r\n});\r\n\r\nfunction showMessage(message,className){\r\n    const div = document.createElement('div');\r\n    div.className = `alert ${className}`;\r\n    div.appendChild(document.createTextNode(message));\r\n    const searchdiv = document.querySelector('#search');\r\n    const searchcondiv = document.querySelector('#search-container');\r\n    searchcondiv.insertBefore(div,search);\r\n    setTimeout(() => document.querySelector('.alert').remove(),3000);\r\n}\r\n\r\nfunction truncateString(str, num) {\r\n    // If the length of str is less than or equal to num\r\n    // just return str--don't truncate it.\r\n    if (str.length <= num) {\r\n      return str\r\n    }\r\n    // Return str truncated with '...' concatenated to the end of str.\r\n    return str.slice(0, num) + '...'\r\n  }\r\n\r\n\r\n\r\n"]}